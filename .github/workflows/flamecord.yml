name: Scheduled Upstream (Flamecord)

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "*/20 * * * *"

env:
  OS: ubuntu-latest

  MAIN_NAME: Flamecord
  MAIN_REPO: AlphaKR93/Flamecord
  MAIN_BRANCH: master

  JDK: 19.0.1+10
  JDK_DIST: temurin
  JDK_REPO: adoptium/temurin19-binaries

  FLAMECORD_REPO: 2lstudios-mc/FlameCord
  WATERFALL_REPO: PaperMC/Waterfall
  BUNGEECORD_REPO: SpigotMC/BungeeCord
  MBEDTLS_REPO: Mbed-TLS/mbedtls

jobs:

  setup:
    name: Initialize Actions
    if: "!startsWith(github.event.commits[0].message, '[CI-Skip]')"
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.setup.outputs.runner }}
    steps:
      - name: Initialize Variables
        id: setup
        run: |
          echo "runner=$OS" >> $GITHUB_OUTPUT

  check:
    name: Check
    steps:

      - name: Initialize Variables
        id: init
        run: |
          echo "runner=$OS" >> $GITHUB_OUTPUT

      - name: Checkout ${{ env.MAIN_NAME }}
        uses: actions/checkout@v3
        with:
          repository: ${{ env.MAIN_REPO }}
          path: ${{ env.MAIN_NAME }}
          ref: ${{ env.MAIN_BRANCH }}
          token: ${{ secrets.GH_PAT }}
          lfs: true
          submodules: true

      - name: Check JDK Version
        id: jdk
        run: |
          latest=$(curl --silent https://api.github.com/repos/$JDK_REPO/releases/latest | jq -r ".tag_name" | cut -c 5-)
          current=$(cat $MAIN_NAME/.github/workflows/build.yml | grep jdk: | cut -d "[" -f 2 | cut -d "]" -f 1)
          echo "Current: $current, Latest: $latest"

          if [ "$latest" != "$current" ]; then
            echo "latest=$latest" >> $GITHUB_OUTPUT
            echo "current=$current" >> $GITHUB_OUTPUT
            echo "Need Upstream"
          fi

      - name: Check Flamecord Commit
        id: flamecord
        run: |
          latest=$(curl --silent https://api.github.com/repos/$FLAMECORD_REPO/commits | jq -r ".[0].sha")
          current=$(cat $MAIN_NAME/.build-data | grep flamecord | sed 's/flamecord = //')
          echo "Current: $current, Latest: $latest"
          if [ "$latest" != "current" ]; then
            echo "latest=$latest" >> $GITHUB_OUTPUT
            echo "current=$current" >> $GITHUB_OUTPUT
            echo "Need Upstream"
          fi

      - name: Check Waterfall Commit
        id: waterfall
        run: |
          latest=$(curl --silent https://api.github.com/repos/$WATERFALL_REPO/commits | jq -r ".[0].sha")
          current=$(cat $MAIN_NAME/.build-data | grep waterfall | sed 's/waterfall = //')
          echo "Current: $current, Latest: $latest"
          if [ "$latest" != "current" ]; then
            echo "latest=$latest" >> $GITHUB_OUTPUT
            echo "current=$current" >> $GITHUB_OUTPUT
            echo "Need Upstream"
          fi

      - name: Check Bungeecord Commit
        id: bungeecord
        run: |
          latest=$(curl --silent https://api.github.com/repos/$BUNGEECORD_REPO/commits | jq -r ".[0].sha")
          current=$(cat $MAIN_NAME/.build-data | grep bungeecord | sed 's/bungeecord = //')
          echo "Current: $current, Latest: $latest"
          if [ "$latest" != "current" ]; then
            echo "latest=$latest" >> $GITHUB_OUTPUT
            echo "current=$current" >> $GITHUB_OUTPUT
            echo "Need Upstream"
          fi

      - name: Check MbedTLS Commit
        id: mbedtls
        run: |
          latest=$(curl --silent https://api.github.com/repos/$MBEDTLS_REPO/commits | jq -r ".[0].sha")
          current=$(cat $MAIN_NAME/.build-data | grep mbedtls | sed 's/mbedtls = //')
          echo "Current: $current, Latest: $latest"
          if [ "$latest" != "current" ]; then
            echo "latest=$latest" >> $GITHUB_OUTPUT
            echo "current=$current" >> $GITHUB_OUTPUT
            echo "Need Upstream"
          fi

    needs: setup
    runs-on: ${{ needs.setup.outputs.runner }}
    outputs:
      runner: ${{ steps.init.outputs.runner }}

      jdk: ${{ steps.jdk.outputs.latest }}
      jdk_before: ${{ steps.jdk.outputs.before }}

      flamecord: ${{ steps.flamecord.outputs.latest }}
      waterfall: ${{ steps.waterfall.outputs.latest }}
      bungeecord: ${{ steps.bungeecord.outputs.latest }}
      mbedtls: ${{ steps.mbedtls.outputs.latest }}

      flamecord_before: ${{ steps.flamecord.outputs.before }}
      waterfall_before: ${{ steps.waterfall.outputs.before }}
      bungeecord_before: ${{ steps.bungeecord.outputs.before }}
      mbedtls_before: ${{ steps.mbedtls.outputs.before }}

  upstream:
    name: Upstream
    steps:

      - name: Checkout ${{ env.MAIN_NAME }}
        uses: actions/checkout@v3
        with:
          repository: ${{ env.MAIN_REPO }}
          path: ${{ env.MAIN_NAME }}
          ref: ${{ env.MAIN_BRANCH }}
          token: ${{ secrets.GH_PAT }}
          lfs: true
          submodules: true
      
      - name: Configuare Git
        run: git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com" && git config --global user.name "github-actions[bot]"

      - name: Upstream Flamecord
        if: needs.check.outputs.flamecord != ''
        run: |
          cd $MAIN_NAME
          git remote add upstream https://github.com/$FLAMECORD_REPO
          git pull --no-commit upstream master
          sed -i 's/flamecord = .*/flamecord = '"${{ needs.check.outputs.flamecord }}"'/' $MAIN_NAME/.build-data

      - name: Update Waterfall Build Data
        if: needs.check.outputs.waterfall != ''
        run: |
          cd $MAIN_NAME
          sed -i 's/waterfall = .*/waterfall = '"${{ needs.check.outputs.waterfall }}"'/' $MAIN_NAME/.build-data

      - name: Update BungeeCord Build Data
        if: needs.check.outputs.bungeecord != ''
        run: |
          cd $MAIN_NAME
          sed -i 's/bungeecord = .*/bungeecord = '"${{ needs.check.outputs.bungeecord }}"'/' $MAIN_NAME/.build-data

      - name: Update MbedTLS Build Data
        if: needs.check.outputs.mbedtls != ''
        run: |
          cd $MAIN_NAME
          sed -i 's/mbedtls = .*/mbedtls = '"${{ needs.check.outputs.mbedtls }}"'/' $MAIN_NAME/.build-data
      
      - name: Commit Changes
        run: |
          cd $MAIN_NAME

          if [ "${{ needs.check.outputs.flamecord }}" != '' ]; then
            upstream="BungeeCord"
            desc=$(curl --silent https://api.github.com/repos/$FLAMECORD_REPO/comare/${{ needs.check.outputs.flamecord }}...${{ needs.check.outputs.flamecord_before }} | jq -r '.commits[] | "$FLAMECORD_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nBungeeCord Changes:\n$desc"
          fi

          if [ "${{ needs.check.outputs.waterfall }}" != '' ]; then
            upstream="BungeeCord"
            desc=$(curl --silent https://api.github.com/repos/$WATERFALL_REPO/comare/${{ needs.check.outputs.waterfall }}...${{ needs.check.outputs.waterfall_before }} | jq -r '.commits[] | "$WATERFALL_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nBungeeCord Changes:\n$desc"
          fi

          if [ "${{ needs.check.outputs.bungeecord }}" != '' ]; then
            upstream="BungeeCord"
            desc=$(curl --silent https://api.github.com/repos/$BUNGEECORD_REPO/comare/${{ needs.check.outputs.bungeecord }}...${{ needs.check.outputs.bungeecord_before }} | jq -r '.commits[] | "$BUNGEECORD_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nBungeeCord Changes:\n$desc"
          fi

          if [ "${{ needs.check.outputs.mbedtls }}" != '' ]; then
            upstream="BungeeCord"
            desc=$(curl --silent https://api.github.com/repos/$MBEDTLS_REPO/comare/${{ needs.check.outputs.mbedtls }}...${{ needs.check.outputs.mbedtls_before }} | jq -r '.commits[] | "$MBEDTLS_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nBungeeCord Changes:\n$desc"
          fi

          git add .
          printf "Updated Upstream ($upstream)\n\nUpstream has released updates that appear to apply and compile correctly$commit" | git commit -F -
          git fetch
          git pull origin $MAIN_BRANCH
          git push origin $MAIN_BRANCH

    needs: check
    runs-on: ${{ needs.check.outputs.runner }}
    if: needs.check.outputs.flamecord != '' || needs.check.outputs.waterfall != '' || needs.check.outputs.bungeecord != '' || needs.check.outputs.mbedtls != ''
