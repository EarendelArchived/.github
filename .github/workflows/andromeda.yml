name: Scheduled Upstream (Andromeda/1.19.3)

on:
  push:
  workflow_dispatch:

env:
  EDITED_PUFFERFISH: true

  OS: ubuntu-latest

  MAIN_NAME: Andromeda
  MAIN_REPO: TeamEarendel/Andromeda
  MAIN_BRANCH: master

  JDK: 19.0.1+10
  JDK_DIST: temurin
  JDK_REPO: adoptium/temurin19-binaries

  WRAPPER_REPO: gradle/gradle
  SHADOW_REPO: johnrengelman/shadow

  PAPERWEIGHT_REPO: PaperMC/Paperweight
  PAPERCLIP_REPO: PaperMC/Paperclip

  TINY_REPO: FabricMC/tiny-remapper
  TINY_BUILD_GRADLE: https://raw.githubusercontent.com/FabricMC/tiny-remapper/master/build.gradle

  PAPER_REPO: PaperMC/Paper
  PAPER_BRANCH: master

  PURPUR_REPO: PurpurMC/Purpur
  PURPUR_BRANCH: ver/1.19.3

  PUFFERFISH_REPO: pufferfish-gg/Pufferfish
  PUFFERFISH_BRANCH: ver/1.19

jobs:

  setup:
    name: Initialize Actions
    if: "!startsWith(github.event.commits[0].message, '[CI-Skip]')"
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.setup.outputs.runner }}
    steps:
      - name: Initialize Variables
        id: setup
        run: |
          echo "runner=$OS" >> $GITHUB_OUTPUT

  check-dependencies:
    name: Check Dependencies
    steps:

      - name: Initialize Variables
        id: init
        run: |
          echo "runner=$OS" >> $GITHUB_OUTPUT

      - name: Checkout ${{ env.MAIN_NAME }}
        uses: actions/checkout@v3
        with:
          repository: ${{ env.MAIN_REPO }}
          path: ${{ env.MAIN_NAME }}
          ref: ${{ env.MAIN_BRANCH }}
          # token: ${{ secrets.GH_PAT }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JDK_DIST }}
          java-version: ${{ env.JDK }}
          check-latest: true
          cache: 'gradle'

      - name: Check JDK Version
        id: jdk
        run: |
          latest=$(curl --silent https://api.github.com/repos/$JDK_REPO/releases/latest | jq -r ".tag_name" | cut -c 5-)
          current=$(cat $MAIN_NAME/.github/workflows/build.yml | grep jdk: | cut -d "[" -f 2 | cut -d "]" -f 1)
          echo "Current: $current, Latest: $latest"

          if [ "$latest" != "$current" ]; then
            echo "latest=$latest" >> $GITHUB_OUTPUT
            echo "before=$current" >> $GITHUB_OUTPUT
            echo "Need Upstream"
          fi
      
      - name: Check Gradle Wrapper Version
        id: wrapper
        run: |
          latest=$(curl --silent https://services.gradle.org/versions/current | jq -r ".version")
          current=$(cd $MAIN_NAME && ./gradlew -v | grep Gradle | grep -v ! | cut -d " " -f 2)
          echo "Current: $current, Latest: $latest"

          if [ "$latest" != "$current" ]; then
            echo "latest=$latest" >> $GITHUB_OUTPUT
            echo "before=$current" >> $GITHUB_OUTPUT
            echo "Need Upstream"
          fi
      
      - name: Check Gradle Shadow Version
        id: shadow
        run: |
          latest=$(curl --silent https://api.github.com/repos/$SHADOW_REPO/releases/latest | jq -r ".tag_name")
          current=$(cat $MAIN_NAME/build.gradle.kts | grep com.github.johnrengelman.shadow | cut -d "\"" -f 4)
          echo "Current: $current, Latest: $latest"

          if [ "$latest" != "$current" ]; then
            echo "latest=$latest" >> $GITHUB_OUTPUT
            echo "before=$current" >> $GITHUB_OUTPUT
            echo "Need Upstream"
          fi
      
      - name: Check Paperweight Version
        id: paperweight
        run: |
          latest=$(curl --silent https://api.github.com/repos/$PAPERWEIGHT_REPO/tags | jq -r ".[0].name" | cut -c 2-)
          current=$(cat $MAIN_NAME/build.gradle.kts | grep io.papermc.paperweight.patcher | cut -d "\"" -f 4)
          echo "Current: $current, Latest: $latest"

          if [ "$latest" != "$current" ]; then
            echo "latest=$latest" >> $GITHUB_OUTPUT
            echo "before=$current" >> $GITHUB_OUTPUT
            echo "Need Upstream"
          fi
      
      - name: Check Paperclip Version
        id: paperclip
        run: |
          latest=$(curl --silent https://api.github.com/repos/$PAPERCLIP_REPO/tags | jq -r ".[0].name" | cut -c 2-)
          current=$(cat $MAIN_NAME/build.gradle.kts | grep io.papermc:paperclip | cut -d "\"" -f 2 | cut -d ":" -f 3)
          echo "Current: $current, Latest: $latest"

          if [ "$latest" != "$current" ]; then
            echo "latest=$latest" >> $GITHUB_OUTPUT
            echo "before=$current" >> $GITHUB_OUTPUT
            echo "Need Upstream"
          fi
      
      - name: Check Tiny Remapper Version
        id: tiny
        run: |
          latest=$(curl --silent $TINY_BUILD_GRADLE | grep version | grep = | head -n 1 | cut -d "'" -f 2)
          current=$(cat $MAIN_NAME/build.gradle.kts | grep net.fabricmc:tiny-remapper | cut -d ":" -f 3)
          echo "Current: $current, Latest: $latest"

          if [ "$latest" != "$current" ]; then
            echo "latest=$latest" >> $GITHUB_OUTPUT
            echo "before=$current" >> $GITHUB_OUTPUT
            echo "Need Upstream"
          fi

    needs: setup
    runs-on: ${{ needs.setup.outputs.runner }}
    outputs:
      runner: ${{ steps.init.outputs.runner }}

      jdk: ${{ steps.jdk.outputs.latest }}
      wrapper: ${{ steps.wrapper.outputs.latest }}
      shadow: ${{ steps.shadow.outputs.latest }}
      paperweight: ${{ steps.paperweight.outputs.latest }}
      paperclip: ${{ steps.paperclip.outputs.latest }}
      tiny: ${{ steps.tiny.outputs.latest }}

      jdk_before: ${{ steps.jdk.outputs.before }}
      wrapper_before: ${{ steps.wrapper.outputs.before }}
      shadow_before: ${{ steps.shadow.outputs.before }}
      paperweight_before: ${{ steps.paperweight.outputs.before }}
      paperclip_before: ${{ steps.paperclip.outputs.before }}
      tiny_before: ${{ steps.tiny.outputs.before }}

  check-upstreams:
    name: Check Upstreams
    steps:

      - name: Initialize Variables
        id: init
        run: |
          echo "runner=$OS" >> $GITHUB_OUTPUT
          echo "edited_pufferfish=$EDITED_PUFFERFISH" >> $GITHUB_OUTPUT

      - name: Checkout ${{ env.MAIN_NAME }}
        uses: actions/checkout@v3
        with:
          repository: ${{ env.MAIN_REPO }}
          path: ${{ env.MAIN_NAME }}
          ref: ${{ env.MAIN_BRANCH }}
          # token: ${{ secrets.GH_PAT }}

      - name: Check Paper Commit
        id: paper
        run: |
          latest=$(curl --silent https://api.github.com/repos/$PAPER_REPO/commits?sha=$PAPER_BRANCH | jq -r ".[0].sha")
          current=$(cat $MAIN_NAME/gradle.properties | grep paperCommit | sed 's/paperCommit = //')
          echo "Current: $current, Latest: $latest"
          if [ "$latest" != "current" ]; then echo "latest=$latest" >> $GITHUB_OUTPUT; echo "Need Upstream"; fi

      - name: Check Purpur Commit
        id: purpur
        run: |
          latest=$(curl --silent https://api.github.com/repos/$PURPUR_REPO/commits?sha=$PURPUR_BRANCH | jq -r ".[0].sha")
          current=$(cat $MAIN_NAME/.upstream-data | grep purpurCommit | sed 's/purpurCommit = //')
          echo "Current: $current, Latest: $latest"
          if [ "$latest" != "current" ]; then echo "latest=$latest" >> $GITHUB_OUTPUT; echo "Need Upstream"; fi

      - name: Check Pufferfish Commit
        id: pufferfish
        run: |
          latest=$(curl --silent https://api.github.com/repos/$PUFFERFISH_REPO/commits?sha=$PUFFERFISH_BRANCH | jq -r ".[0].sha")
          current=$(cat $MAIN_NAME/.upstream-data | grep pufferfishCommit | sed 's/pufferfishCommit = //')
          echo "Current: $current, Latest: $latest"
          if [ "$latest" != "current" ]; then echo "latest=$latest" >> $GITHUB_OUTPUT; echo "Need Upstream"; fi

    needs: setup
    runs-on: ${{ needs.setup.outputs.runner }}
    outputs:
      runner: ${{ steps.init.outputs.runner }}
      edited_pufferfish: ${{ steps.init.outputs.edited_pufferfish }}
      paper: ${{ steps.paper.outputs.latest }}
      purpur: ${{ steps.purpur.outputs.latest }}
      pufferfish: ${{ steps.pufferfish.outputs.latest }}
  
  update-dependencies:
    name: Update Dependencies
    steps:

      - name: Checkout ${{ env.MAIN_NAME }}
        uses: actions/checkout@v3
        with:
          repository: ${{ env.MAIN_REPO }}
          path: ${{ env.MAIN_NAME }}
          ref: ${{ env.MAIN_BRANCH }}
          # token: ${{ secrets.GH_PAT }}
      
      - name: Setup Java
        if: needs.check-dependencies.outputs.wrapper != ''
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JDK_DIST }}
          java-version: ${{ env.JDK }}
          check-latest: true
          cache: 'gradle'

      - name: Update JDK
        if: needs.check-dependencies.outputs.jdk != ''
        run: |
          echo "TODO"

      - name: Update Gradle Wrapper
        if: needs.check-dependencies.outputs.wrapper != ''
        run: |
          cd $MAIN_NAME && ./gradlew wrapper --gradle-version=${{ needs.check-dependencies.outputs.wrapper }}

      - name: Update Gradle Shadow
        if: needs.check-dependencies.outputs.shadow != ''
        run: |
          sed -i 's/id("com.github.johnrengelman.shadow") version ".*"/id("com.github.johnrengelman.shadow") version "${{ needs.check-dependencies.outputs.shadow }}"/' $MAIN_NAME/build.gradle.kts
      
      - name: Update Paperweight
        if: needs.check-dependencies.outputs.paperweight != ''
        run: |
          sed -i 's/id("io.papermc.paperweight.patcher") version ".*"/id("io.papermc.paperweight.patcher") version "${{ needs.check-dependencies.outputs.paperweight }}"/' $MAIN_NAME/build.gradle.kts

      - name: Update Paperclip
        if: needs.check-dependencies.outputs.paperclip != ''
        run: |
          sed -i 's/paperclip("io.papermc:paperclip:.*")/paperclip("io.papermc:paperclip:${{ needs.check-dependencies.outputs.paperclip }}")/' $MAIN_NAME/build.gradle.kts
      
      - name: Update Tiny Remapper
        if: needs.check-dependencies.outputs.tiny != ''
        run: |
          sed -i 's/remapper("net.fabricmc:tiny-remapper:.*:fat")/remapper("net.fabricmc:tiny-remapper:${{ needs.check-dependencies.outputs.tiny }}:fat")/' $MAIN_NAME/build.gradle.kts
      
      - name: Commit Changes
        run: |
          cd $MAIN_NAME
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com" && git config --global user.name "github-actions[bot]"

          if [ "${{ needs.check-dependencies.outputs.wrapper }}" != '' ]; then
            upstream="Wrapper"
            if [ "$`echo . | cut -d "." -f 2`" == "$`echo ${{ needs.check-dependencies.outputs.wrapper }} | cut -d "." -f 3`" ]; then echo latest="${{ needs.check-dependencies.outputs.wrapper }}.0"; else echo latest="${{ needs.check-dependencies.outputs.wrapper }}"; fi
            if [ "$`echo . | cut -d "." -f 2`" == "$`echo ${{ needs.check-dependencies.outputs.wrapper_before }} | cut -d "." -f 3`" ]; then echo before="${{ needs.check-dependencies.outputs.wrapper_before }}.0"; else echo before="${{ needs.check-dependencies.outputs.wrapper_before }}"; fi
            desc=$(curl --silent https://api.github.com/repos/$WRAPPER_REPO/comare/v$before...v$latest | jq -r '.commits[] | "$WRAPPER_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nWrapper Changes:\n$desc"
          fi

          if [ "${{ needs.check-dependencies.outputs.shadow }}" != '' ]; then
            upstream="Shadow"
            desc=$(curl --silent https://api.github.com/repos/$SHADOW_REPO/comare/${{ needs.check-dependencies.outputs.shadow }}...${{ needs.check-dependencies.outputs.shadow_before }} | jq -r '.commits[] | "$SHADOW_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nShadow Changes:\n$desc"
          fi

          if [ "${{ needs.check-dependencies.outputs.paperweight }}" != '' ]; then
            upstream="Paperweight"
            desc=$(curl --silent https://api.github.com/repos/$PAPERWEIGHT_REPO/comare/${{ needs.check-dependencies.outputs.paperweight }}...${{ needs.check-dependencies.outputs.paperweight_before }} | jq -r '.commits[] | "$PAPERWEIGHT_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nPaperweight Changes:\n$desc"
          fi

          if [ "${{ needs.check-dependencies.outputs.paperclip }}" != '' ]; then
            upstream="Paperclip"
            desc=$(curl --silent https://api.github.com/repos/$PAPERCLIP_REPO/comare/${{ needs.check-dependencies.outputs.paperclip }}...${{ needs.check-dependencies.outputs.paperclip_before }} | jq -r '.commits[] | "$PAPERCLIP_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nPaperclip Changes:\n$desc"
          fi

          if [ "${{ needs.check-dependencies.outputs.tiny }}" != '' ]; then
            upstream="Tiny Remapper"
            desc=$(curl --silent https://api.github.com/repos/$TINY_REPO/comare/${{ needs.check-dependencies.outputs.tiny }}...${{ needs.check-dependencies.outputs.tiny_before }} | jq -r '.commits[] | "$TINY_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nTiny Remapper Changes:\n$desc"
          fi

          git add .
          printf "[CI-Skip] Updated Dependencies ($upstream)\n\nDependency has released updates that appear to apply and compile correctly$commit" | git commit -F -
          git fetch
          git pull origin $MAIN_BRANCH
          git push origin $MAIN_BRANCH

    needs: [check-dependencies]
    runs-on: ${{ needs.check-dependencies.outputs.runner }}
    if: needs.check-dependencies.outputs.wrapper != '' || needs.check-dependencies.outputs.shadow != '' || needs.check-dependencies.outputs.paperweight != '' || needs.check-dependencies.outputs.paperclip != '' || needs.check-dependencies.outputs.tiny != '' # || needs.check-dependencies.outputs.jdk != 
  
  upstream-paper:
    name: Upstream Paper
    steps:

      - name: Checkout ${{ env.MAIN_NAME }}
        uses: actions/checkout@v3
        with:
          repository: ${{ env.MAIN_REPO }}
          path: ${{ env.MAIN_NAME }}
          ref: ${{ env.MAIN_BRANCH }}
          # token: ${{ secrets.GH_PAT }}
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JDK_DIST }}
          java-version: ${{ env.JDK }}
          check-latest: true
          cache: 'gradle'

      - name: Configure Git
        run: git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com" && git config --global user.name "github-actions[bot]"

      - name: Update Upstream
        run: |
          cd $MAIN_NAME
          sed -i 's/paperCommit = .*/paperCommit = '"${{ needs.check-upstreams.outputs.paper }}"'/' gradle.properties
          ./gradlew applyPatches --stacktrace
      
      - name: Rebuild ${{ env.MAIN_NAME }}
        run: | 
          cd Prismarine
          ./gradlew rebuildPatches

      - name: Commit Changes
        run: |
          cd $MAIN_NAME

          desc=$(curl --silent -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$PAPER_REPO/compare/${{ needs.check-upstreams.outputs.paper_before }}...${{ needs.check-upstreams.outputs.paper }} | jq -r '.commits[] | "$PAPER@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')

          git add .
          printf "Updated Upstream (Paper)\n\nUpstream has released updates that appear to apply and compile correctly\n\nPaper Changes:\n$desc" | git commit -F -
          git fetch
          git pull origin $MAIN_BRANCH
          git push origin $MAIN_BRANCH

    needs: [check-upstreams]
    runs-on: ${{ needs.check-upstreams.outputs.runner }}
    if: needs.check-upstreams.outputs.paper != '' && needs.check-upstreams.outputs.pufferfish == '' && needs.check-upstreams.outputs.purpur == ''

  upstream-pufferfish:
    name: Upstream Pufferfish
    steps:

      - name: Checkout ${{ env.MAIN_NAME }}
        uses: actions/checkout@v3
        with:
          repository: ${{ env.MAIN_REPO }}
          path: ${{ env.MAIN_NAME }}
          ref: ${{ env.MAIN_BRANCH }}
          # token: ${{ secrets.GH_PAT }}

      - name: Checkout Pufferfish
        uses: actions/checkout@v3
        with:
          repository: ${{ env.PUFFERFISH_REPO }}
          path: Pufferfish
          ref: ${{ env.PUFFERFISH_BRANCH }}
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JDK_DIST }}
          java-version: ${{ env.JDK }}
          check-latest: true
          cache: 'gradle'

      - name: Configure Git
        run: git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com" && git config --global user.name "github-actions[bot]"

      - name: Initial Sources
        id: init
        run: |
          cd Pufferfish/
          pufferfish=$(git log -1 --pretty=oneline | cut -c 1-40) && echo "pufferfish=$pufferfish" > $GITHUB_OUTPUT
          sed -i 's/paperRef=.*/paperRef='"${{ needs.check-upstreams.outputs.paper }}"'/' gradle.properties
          ./gradlew applyPatches --stacktrace

      - name: Copy Sources
        run: |
          sed -i 's/pufferfish = .*/pufferfish = '"${{ env.pufferfish }}"'/' Andromeda/.upstream-data
          cd Pufferfish/.gradle/caches/paperweight/upstreams/paper/Paper-Server
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          git add .
          git commit -m "Sources"
      
      - name: Pufferfish Server Changes
        run: |
          cd Pufferfish/pufferfish-server/
          rm -rf .git
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          mv -f ../.gradle/caches/paperweight/upstreams/paper/Paper-Server/.git ./
          git add .
          printf "Pufferfish Server Changes\n\nOriginal: Kevin Raneri <kevin.raneri@gmail.com>\nCopyright (C) 2022 Pufferfish Studios LLC\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>." | git commit -F -

      - name: Pufferfish API Changes
        run: |
          cd Pufferfish/pufferfish-api
          rm -rf .git
          mv -f ../.gradle/caches/paperweight/upstreams/paper/Paper-API/.git ./
          git add .
          printf "Pufferfish API Changes\n\nOriginal: Kevin Raneri <kevin.raneri@gmail.com>\nCopyright (C) 2022 Pufferfish Studios LLC\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>." | git commit -F -

      - name: Build Patches
        run: |
          cd Pufferfish/
          ./gradlew rebuildPatches
          cp -rf patches/api/*-Pufferfish-API-Changes.patch ../$MAIN_NAME/patches/api/0001-Pufferfish-API-Changes.patch
          cp -rf patches/server/*-Pufferfish-Server-Changes.patch ../$MAIN_NAME/patches/server/0001-Pufferfish-Server-Changes.patch

      - name: Rebuild Patches
        run: |
          cd $MAIN_NAME/
          sed -i 's/paperCommit = .*/paperCommit = '"${{ needs.check-upstreams.outputs.paper }}"'/' gradle.properties
          ./gradlew applyPatches --stacktrace
          ./gradlew rebuildPatches

      - name: Commit changes
        run: |
          cd $MAIN_NAME/

          if [ "${{ needs.check-upstreams.outputs.paper }}" != '' ]; then
            upstream="Paper"
            desc=$(curl --silent -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$PAPER_REPO/compare/${{ needs.check-upstreams.outputs.paper_before }}...${{ needs.check-upstreams.outputs.paper }} | jq -r '.commits[] | "$PAPER_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nPaper Changes:\n$desc"
          fi
          
          if [ "$upstream" != "" ]; then upstream="$upstream & Pufferfish"; else upstream="Pufferfish"; fi
          desc=$(curl --silent -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$PUFFERFISH_REPO/compare/${{ needs.check-upstreams.outputs.pufferfish_before }}...${{ steps.init.outputs.pufferfish }} | jq -r '.commits[] | "$PUFFERFISH_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
          commit="$commit\n\nPufferfish Changes:\n$desc"

          git add .
          printf "Updated Upstream ($upstream)\n\nUpstream has released updates that appear to apply and compile correctly$commit" | git commit -F -
          git fetch
          git pull origin $MAIN_BRANCH
          git push origin $MAIN_BRANCH

    needs: [check-upstreams]
    runs-on: ${{ needs.check-upstreams.outputs.runner }}
    if: needs.check-upstreams.outputs.pufferfish != '' && needs.check-upstreams.outputs.purpur == '' && needs.check-upstreams.outputs.edited_pufferfish != 'true'
  
  upstream-purpur:
    name: Upstream Purpur
    steps:

      - name: Checkout ${{ env.MAIN_NAME }}
        uses: actions/checkout@v3
        with:
          repository: ${{ env.MAIN_REPO }}
          path: ${{ env.MAIN_NAME }}
          ref: ${{ env.MAIN_BRANCH }}
          # token: ${{ secrets.GH_PAT }}

      - name: Checkout Pufferfish
        uses: actions/checkout@v3
        with:
          repository: ${{ env.PUFFERFISH_REPO }}
          path: Pufferfish
          ref: ${{ env.PUFFERFISH_BRANCH }}

      - name: Checkout Purpur
        uses: actions/checkout@v3
        with:
          repository: ${{ env.PURPUR_REPO }}
          path: Purpur
          ref: ${{ env.PURPUR_BRANCH }}
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JDK_DIST }}
          java-version: ${{ env.JDK }}
          check-latest: true
          cache: 'gradle'

      - name: Configure Git
        run: git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com" && git config --global user.name "github-actions[bot]"

      - name: Initial Sources
        id: init
        run: |
          cd Pufferfish/
          pufferfish=$(git log -1 --pretty=oneline | cut -c 1-40) && echo "pufferfish=$pufferfish" > $GITHUB_OUTPUT
          sed -i 's/paperRef=.*/paperRef='"${{ needs.check-upstreams.outputs.paper }}"'/' gradle.properties
          ./gradlew applyPatches --stacktrace

      - name: Copy Sources
        run: |
          sed -i 's/pufferfish = .*/pufferfish = '"${{ env.pufferfish }}"'/' Andromeda/.upstream-data
          cd Pufferfish/.gradle/caches/paperweight/upstreams/paper/Paper-Server
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          git add .
          git commit -m "Sources"
      
      - name: Pufferfish Server Changes
        run: |
          cd Pufferfish/pufferfish-server/
          rm -rf .git
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          mv -f ../.gradle/caches/paperweight/upstreams/paper/Paper-Server/.git ./
          git add .
          printf "Pufferfish Server Changes\n\nOriginal: Kevin Raneri <kevin.raneri@gmail.com>\nCopyright (C) 2022 Pufferfish Studios LLC\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>." | git commit -F -

      - name: Pufferfish API Changes
        run: |
          cd Pufferfish/pufferfish-api
          rm -rf .git
          mv -f ../.gradle/caches/paperweight/upstreams/paper/Paper-API/.git ./
          git add .
          printf "Pufferfish API Changes\n\nOriginal: Kevin Raneri <kevin.raneri@gmail.com>\nCopyright (C) 2022 Pufferfish Studios LLC\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>." | git commit -F -

      - name: Build Pufferfish Patches
        run: |
          cd Pufferfish/
          ./gradlew rebuildPatches

      - name: Initial Purpur Sources
        run: |
          cd Purpur/
          purpur=$(git log -1 --pretty=oneline | cut -c 1-40) && echo "purpur=$purpur" > $GITHUB_OUTPUT
          sed -i 's/paperCommit = .*/paperCommit = '"${{ needs.check-dependencies.outputs.paper }}"'/' gradle.properties
          cp -rf ../Pufferfish/patches/api/*-Pufferfish-API-Changes.patch patches/api/0001-Pufferfish-API-Changes.patch
          cp -rf ../Pufferfish/patches/server/*-Pufferfish-Server-Changes.patch patches/server/0001-Pufferfish-Server-Changes.patch
          ./gradlew applyPatches

      - name: Purpur Server Changes
        run: |
          sed -i 's/purpur = .*/purpur = '"${{ env.purpur }}"'/' Andromeda/.upstream-data
          cd Purpur/Purpur-Server/
          rm -rf .git
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          mv -f ../../Pufferfish/pufferfish-server/.git ./
          git add .
          printf "Purpur Server Changes\n\nOriginal: PurpurMC\nCopyright (C) 2022 PurpurMC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE." | git commit -F -

      - name: Purpur API Changes
        run: |
          cd Purpur/Purpur-API/
          rm -rf .git
          mv -f ../../Pufferfish/pufferfish-api/.git ./
          git add .
          printf "Purpur API Changes\n\nOriginal: PurpurMC\nCopyright (C) 2022 PurpurMC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE." | git commit -F -

      - name: Build Patches
        run: |
          cd Purpur/
          ./gradlew rebuildPatches
          cp -rf patches/api/*-Pufferfish-API-Changes.patch ../$MAIN_NAME/patches/api/0001-Pufferfish-API-Changes.patch
          cp -rf patches/server/*-Pufferfish-Server-Changes.patch ../$MAIN_NAME/patches/server/0001-Pufferfish-Server-Changes.patch
          cp -rf patches/api/*-Purpur-API-Changes.patch ../$MAIN_NAME/patches/api/0002-Purpur-API-Changes.patch
          cp -rf patches/server/*-Purpur-Server-Changes.patch ../$MAIN_NAME/patches/server/0002-Purpur-Server-Changes.patch

      - name: Rebuild Patches
        run: |
          cd $MAIN_NAME/
          sed -i 's/paperCommit = .*/paperCommit = '"${{ needs.check-upstreams.outputs.paper }}"'/' gradle.properties
          ./gradlew applyPatches --stacktrace
          ./gradlew rebuildPatches

      - name: Commit changes
        run: |
          cd $MAIN_NAME/

          if [ "${{ needs.check-upstreams.outputs.paper }}" != '' ]; then
            upstream="Paper"
            desc=$(curl --silent -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$PAPER_REPO/compare/${{ needs.check-upstreams.outputs.paper_before }}...${{ needs.check-upstreams.outputs.paper }} | jq -r '.commits[] | "$PAPER_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nPaper Changes:\n$desc"
          fi
          
          if [ "${{ needs.check-upstreams.outputs.paper }}" != '' ]; then
            if [ "$upstream" != "" ]; then upstream="$upstream & Pufferfish"; else upstream="Pufferfish"; fi
            desc=$(curl --silent -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$PUFFERFISH_REPO/compare/${{ needs.check-upstreams.outputs.pufferfish_before }}...${{ steps.init.outputs.pufferfish }} | jq -r '.commits[] | "$PUFFERFISH_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nPufferfish Changes:\n$desc"
          fi

          if [ "$upstream" != "" ]; then upstream="$upstream & Purpur"; else upstream="Purpur"; fi
          desc=$(curl --silent -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$PURPUR_REPO/compare/${{ needs.check-upstreams.outputs.purpur_before }}...${{ steps.init.outputs.purpur }} | jq -r '.commits[] | "$PURPUR_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
          commit="$commit\n\nPurpur Changes:\n$desc"

          git add .
          printf "Updated Upstream ($upstream)\n\nUpstream has released updates that appear to apply and compile correctly$commit" | git commit -F -
          git fetch
          git pull origin $MAIN_BRANCH
          git push origin $MAIN_BRANCH

    needs: [check-upstreams]
    runs-on: ${{ needs.check-upstreams.outputs.runner }}
    if: needs.check-upstreams.outputs.purpur != '' && needs.check-upstreams.outputs.edited_pufferfish != 'true'
  
  upstream-purpur-edited:
    name: Upstream Purpur (Edited)
    steps:

      - name: Checkout ${{ env.MAIN_NAME }}
        uses: actions/checkout@v3
        with:
          repository: ${{ env.MAIN_REPO }}
          path: ${{ env.MAIN_NAME }}
          ref: ${{ env.MAIN_BRANCH }}
          # token: ${{ secrets.GH_PAT }}

      - name: Checkout Pufferfish
        uses: actions/checkout@v3
        with:
          repository: ${{ env.PUFFERFISH_REPO }}
          path: Pufferfish
          ref: ${{ env.PUFFERFISH_BRANCH }}

      - name: Checkout Purpur
        uses: actions/checkout@v3
        with:
          repository: ${{ env.PURPUR_REPO }}
          path: Purpur
          ref: ${{ env.PURPUR_BRANCH }}
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JDK_DIST }}
          java-version: ${{ env.JDK }}
          check-latest: true
          cache: 'gradle'

      - name: Configure Git
        run: git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com" && git config --global user.name "github-actions[bot]"

      - name: Initial Sources
        id: init
        run: |
          cd Pufferfish/
          pufferfish=$(git log -1 --pretty=oneline | cut -c 1-40) && echo "pufferfish=$pufferfish" > $GITHUB_OUTPUT
          sed -i 's/paperRef=.*/paperRef='"${{ needs.check-upstreams.outputs.paper }}"'/' gradle.properties
          rm -rf patches/server/* patches/api/*
          cp -rf ../Purpur/patches/api/*-Pufferfish-API-Changes.patch patches/api/0001-Pufferfish-API-Changes.patch
          cp -rf ../Purpur/patches/server/*-Pufferfish-Server-Changes.patch patches/server/0001-Pufferfish-Server-Changes.patch
          ./gradlew applyPatches --stacktrace

      - name: Copy Sources
        run: |
          sed -i 's/pufferfish = .*/pufferfish = '"${{ env.pufferfish }}"'/' Andromeda/.upstream-data
          cd Pufferfish/.gradle/caches/paperweight/upstreams/paper/Paper-Server
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          git add .
          git commit -m "Sources"
      
      - name: Pufferfish Server Changes
        run: |
          cd Pufferfish/pufferfish-server/
          rm -rf .git
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          mv -f ../.gradle/caches/paperweight/upstreams/paper/Paper-Server/.git ./
          git add .
          printf "Pufferfish Server Changes\n\nOriginal: Kevin Raneri <kevin.raneri@gmail.com>\nCopyright (C) 2022 Pufferfish Studios LLC\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>." | git commit -F -

      - name: Pufferfish API Changes
        run: |
          cd Pufferfish/pufferfish-api
          rm -rf .git
          mv -f ../.gradle/caches/paperweight/upstreams/paper/Paper-API/.git ./
          git add .
          printf "Pufferfish API Changes\n\nOriginal: Kevin Raneri <kevin.raneri@gmail.com>\nCopyright (C) 2022 Pufferfish Studios LLC\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>." | git commit -F -

      - name: Build Pufferfish Patches
        run: |
          cd Pufferfish/
          ./gradlew rebuildPatches

      - name: Initial Purpur Sources
        run: |
          cd Purpur/
          purpur=$(git log -1 --pretty=oneline | cut -c 1-40) && echo "purpur=$purpur" > $GITHUB_OUTPUT
          sed -i 's/paperCommit = .*/paperCommit = '"${{ needs.check-dependencies.outputs.paper }}"'/' gradle.properties
          ./gradlew applyPatches

      - name: Purpur Server Changes
        run: |
          sed -i 's/purpur = .*/purpur = '"${{ env.purpur }}"'/' Andromeda/.upstream-data
          cd Purpur/Purpur-Server/
          rm -rf .git
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          mv -f ../../Pufferfish/pufferfish-server/.git ./
          git add .
          printf "Purpur Server Changes\n\nOriginal: PurpurMC\nCopyright (C) 2022 PurpurMC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE." | git commit -F -

      - name: Purpur API Changes
        run: |
          cd Purpur/Purpur-API/
          rm -rf .git
          mv -f ../../Pufferfish/pufferfish-api/.git ./
          git add .
          printf "Purpur API Changes\n\nOriginal: PurpurMC\nCopyright (C) 2022 PurpurMC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE." | git commit -F -

      - name: Build Patches
        run: |
          cd Purpur/
          ./gradlew rebuildPatches
          cp -rf patches/api/*-Pufferfish-API-Changes.patch ../$MAIN_NAME/patches/api/0001-Pufferfish-API-Changes.patch
          cp -rf patches/server/*-Pufferfish-Server-Changes.patch ../$MAIN_NAME/patches/server/0001-Pufferfish-Server-Changes.patch
          cp -rf patches/api/*-Purpur-API-Changes.patch ../$MAIN_NAME/patches/api/0002-Purpur-API-Changes.patch
          cp -rf patches/server/*-Purpur-Server-Changes.patch ../$MAIN_NAME/patches/server/0002-Purpur-Server-Changes.patch

      - name: Rebuild Patches
        run: |
          cd $MAIN_NAME/
          sed -i 's/paperCommit = .*/paperCommit = '"${{ needs.check-upstreams.outputs.paper }}"'/' gradle.properties
          ./gradlew applyPatches --stacktrace
          ./gradlew rebuildPatches

      - name: Commit changes
        run: |
          cd $MAIN_NAME/

          if [ "${{ needs.check-upstreams.outputs.paper }}" != '' ]; then
            upstream="Paper"
            desc=$(curl --silent -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$PAPER_REPO/compare/${{ needs.check-upstreams.outputs.paper_before }}...${{ needs.check-upstreams.outputs.paper }} | jq -r '.commits[] | "$PAPER_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nPaper Changes:\n$desc"
          fi
          
          if [ "${{ needs.check-upstreams.outputs.paper }}" != '' ]; then
            if [ "$upstream" != "" ]; then upstream="$upstream & Pufferfish"; else upstream="Pufferfish"; fi
            desc=$(curl --silent -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$PUFFERFISH_REPO/compare/${{ needs.check-upstreams.outputs.pufferfish_before }}...${{ steps.init.outputs.pufferfish }} | jq -r '.commits[] | "$PUFFERFISH_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            commit="$commit\n\nPufferfish Changes:\n$desc"
          fi

          if [ "$upstream" != "" ]; then upstream="$upstream & Purpur"; else upstream="Purpur"; fi
          desc=$(curl --silent -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$PURPUR_REPO/compare/${{ needs.check-upstreams.outputs.purpur_before }}...${{ steps.init.outputs.purpur }} | jq -r '.commits[] | "$PURPUR_REPO@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
          commit="$commit\n\nPurpur Changes:\n$desc"

          git add .
          printf "Updated Upstream ($upstream)\n\nUpstream has released updates that appear to apply and compile correctly$commit" | git commit -F -
          git fetch
          git pull origin $MAIN_BRANCH
          git push origin $MAIN_BRANCH

    needs: [check-upstreams]
    runs-on: ${{ needs.check-upstreams.outputs.runner }}
    if: needs.check-upstreams.outputs.purpur != '' && needs.check-upstreams.outputs.edited_pufferfish == 'true'
